---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

const url = new URL(Astro.request.url);
const genre = url.searchParams.get("genre") || "all";
const searchQuery = (url.searchParams.get("search") || "").toLowerCase();

let movies = await getCollection("apiMovies");

if (genre !== "all") {
  movies = movies.filter((m) => m.data.genre_ids.includes(parseInt(genre)));
}

if (searchQuery.length >= 2) {
  movies = movies.filter((m) => {
    const titleMatches = m.data.title.toLowerCase().includes(searchQuery);
    const year = m.data.release_date.slice(0, 4);
    const yearMatches = year.includes(searchQuery);

    return titleMatches || yearMatches;
  });
}

movies.sort((a, b) => a.data.title.localeCompare(b.data.title));
---

<BaseLayout title="MovieStore-lab">
  <main class="container-fluid">
    <section class="grid" id="movies-grid">
      {movies.length === 0 ? (
        <p>Sorry, No results found for "{searchQuery}"</p>
      ) : (
        movies.map((m) => (
          <article
            class="border-2 p-4"
            data-genreids={m.data.genre_ids.join(",")}
            data-title={m.data.title.toLowerCase()}
          >
            <a href={`/movie/info/${m.id}`}>
              <img
                src={`https://image.tmdb.org/t/p/w300${m.data.poster_path}`}
              />
              <h1>
                {m.data.title} ({m.data.release_date.slice(0, 4)})
              </h1>
              <h2>
                - Rating: ({m.data.vote_average}/10) - Votes:{" "}
                {m.data.vote_count}
              </h2>
            </a>
            <div class="buttonArea">
              <button class="add-to-cart" data-movieid={m.data.id}>
                Add to cart
              </button>
            </div>
          </article>
        ))
      )}
    </section>
  </main>
  <script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
      const buttons = document.querySelectorAll(".add-to-cart");
      buttons.forEach((btn) => {
        btn.addEventListener("click", () => {
          const movieId = parseInt(btn.getAttribute("data-movieid"));
          const cart = JSON.parse(localStorage.getItem("cart")) || [];
          const existingItem = cart.find((item) => item.id === movieId);

          if (existingItem) {
            existingItem.quantity += 1;
          } else {
            cart.push({ id: movieId, quantity: 1 });
          }

          localStorage.setItem("cart", JSON.stringify(cart));
          alert("Movie added to cart!");
        });
      });
    });
  </script>
</BaseLayout>
<style>
  section {
    grid-template-columns: repeat(auto-fill, 30ch);
  }
  article {
    border-color: rgba(0, 0, 0, 0.432);
  }
  a:hover {
    color: var(--pico-primary-focus);
  }
  ul {
    margin-left: 1.5rem;
  }
  article p,
  article ul {
    color: var(--pico-h3-color);
  }

  h1 {
    font-size: 1rem;
    height: 2rem;
  }
  h2 {
    font-size: 0.75rem;
  }

  main {
    padding-top: 2rem;
  }
  .buttonArea {
    padding-top: 1rem;
  }
</style>
