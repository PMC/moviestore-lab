---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

const movies = await getCollection("apiMovies");
const categories = await getCollection("MovieCategories");
---

<BaseLayout title="MovieStore-lab">
  <main class="container-fluid">
    <!-- Checkboxes -->

    <section class="grid">
      {
        movies.map((m) => (
          <article class="border-2 p-4" data-genreids={m.data.genre_ids.join(",")}>
            <a href={`./movie/info/${m.id}`}>
              <img src={`https://image.tmdb.org/t/p/w300${m.data.poster_path}`} />
              <h1>
                {m.data.title} - ({m.data.release_date.slice(0, 4)})
              </h1>

              <h2>
                - Rating: ({m.data.vote_average}/10) - Votes: {m.data.vote_count}{" "}
              </h2>
            </a>
            <div class="buttonArea">
              <button class="add-to-cart" data-movieid={m.data.id}>
                Add to cart
              </button>
            </div>
          </article>
        ))
      }
    </section>
  </main>
  <script is:inline>
    // Wait for the DOM to load
    document.addEventListener("DOMContentLoaded", () => {
      const buttons = document.querySelectorAll(".add-to-cart");

      buttons.forEach((btn) => {
        btn.addEventListener("click", () => {
          const movieId = parseInt(btn.getAttribute("data-movieid"));

          // Parse the cart from localStorage (or start a new one)
          const cart = JSON.parse(localStorage.getItem("cart")) || [];

          // Check if item is already in cart
          const existingItem = cart.find((item) => item.id === movieId);
          if (existingItem) {
            existingItem.quantity += 1;
          } else {
            cart.push({ id: movieId, quantity: 1 });
          }

          // Save back to localStorage
          localStorage.setItem("cart", JSON.stringify(cart));
          alert("Movie added to cart!");
        });
      });

      function filterByGenre(genreId) {
        const articles = document.querySelectorAll("article[data-genreids]");
        articles.forEach((article) => {
          const genreIds = article.getAttribute("data-genreids").split(",");
          if (genreId === "all" || genreIds.includes(genreId)) {
            article.style.display = "block";
          } else {
            article.style.display = "none";
          }
        });
      }

      const params = new URLSearchParams(window.location.search);
      const selectedGenre = params.get("genre");

      if (selectedGenre) {
        filterByGenre(selectedGenre);
      }
    });
  </script>
</BaseLayout>
<style>
  section {
    grid-template-columns: repeat(auto-fill, 30ch);
  }
  article {
    border-color: rgba(0, 0, 0, 0.432);
  }
  a:hover {
    color: var(--pico-primary-focus);
  }
  ul {
    margin-left: 1.5rem;
  }
  article p,
  article ul {
    color: var(--pico-h3-color);
  }

  h1 {
    font-size: 1rem;
    height: 2rem;
  }
  h2 {
    font-size: 0.75rem;
  }

  main {
    padding-top: 2rem;
  }
  .buttonArea {
    padding-top: 1rem;
  }
</style>
